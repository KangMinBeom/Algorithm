import heapq
import sys

INF = int(le9)
dx = [-1,1,0,0]
dy = [0,0,-1,1]

def dijkstra():
    q = []

    heapq.heappush(q,(graph[0][0],0,0))

    while q:
        cost, x, y = heapq.pop(q)

        if x == N-1 and y == N-1:
            print(f'Problem {count}: {dis[x][y]}')
            break

        for i in range(4):
            new_x = x + dx[i]
            new_y = y + dy[i]

            if 0 <= new_x < N and 0 <= new_y < N:
                new_cost = cost + graph[new_x][new_y]
                if new_cost < dis[new_x][new_y]:
                    dis[new_x][new_y] = new_cost
                    heapq.heappush(q,(new_cost,new_x,new_y))

count = 1
while True:
    N = int(input())

    if N == 0:
        break
    else:
        graph = [list(map(int,input().split())) for i in range(3)]

        dis = [[INF] * N for _ in range(N)]

        dijkstra()

        count += 1

